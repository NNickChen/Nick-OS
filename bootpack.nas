[FORMAT "WCOFF"]
[INSTRSET "i486p"]
[OPTIMIZE 1]
[OPTION 1]
[BITS 32]
	EXTERN	_fifo32_init
	EXTERN	_init_gdtidt
	EXTERN	_init_pic
	EXTERN	_io_sti
	EXTERN	_init_pit
	EXTERN	_init_keyboard
	EXTERN	_enable_mouse
	EXTERN	_io_out8
	EXTERN	_memtest
	EXTERN	_memman_init
	EXTERN	_memman_free
	EXTERN	_init_palette
	EXTERN	_shtctl_init
	EXTERN	_task_init
	EXTERN	_task_run
	EXTERN	_sheet_alloc
	EXTERN	_memman_alloc_4k
	EXTERN	_sheet_setbuf
	EXTERN	_init_screen8
	EXTERN	_task_alloc
	EXTERN	_time_task
	EXTERN	_make_window8
	EXTERN	_make_textbox8
	EXTERN	_console_task
	EXTERN	_init_mouse_cursor8
	EXTERN	_sheet_slide
	EXTERN	_sheet_updown
	EXTERN	_fifo32_put
	EXTERN	_fifo32_status
	EXTERN	_io_cli
	EXTERN	_fifo32_get
	EXTERN	_mouse_decode
	EXTERN	_sprintf
	EXTERN	_get_bc
	EXTERN	_putfonts8_asc_sht
	EXTERN	_end_app
	EXTERN	_keytable.0
	EXTERN	_boxfill8
	EXTERN	_sheet_refresh
	EXTERN	_wait_KBC_sendready
	EXTERN	_keytable1.1
	EXTERN	_task_sleep
	EXTERN	_change_wtitle8
[FILE "bootpack.c"]
[SECTION .data]
_keytable.0:
	DB	0
	DB	0
	DB	49
	DB	50
	DB	51
	DB	52
	DB	53
	DB	54
	DB	55
	DB	56
	DB	57
	DB	48
	DB	45
	DB	61
	DB	8
	DB	0
	DB	81
	DB	87
	DB	69
	DB	82
	DB	84
	DB	89
	DB	85
	DB	73
	DB	79
	DB	80
	DB	91
	DB	93
	DB	10
	DB	0
	DB	65
	DB	83
	DB	68
	DB	70
	DB	71
	DB	72
	DB	74
	DB	75
	DB	76
	DB	59
	DB	0
	DB	96
	DB	0
	DB	0
	DB	90
	DB	88
	DB	67
	DB	86
	DB	66
	DB	78
	DB	77
	DB	44
	DB	46
	DB	47
	DB	0
	DB	0
	DB	0
	DB	32
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
_keytable1.1:
	DB	0
	DB	0
	DB	33
	DB	64
	DB	35
	DB	36
	DB	37
	DB	94
	DB	38
	DB	42
	DB	40
	DB	41
	DB	95
	DB	43
	DB	8
	DB	0
	DB	81
	DB	87
	DB	69
	DB	82
	DB	84
	DB	89
	DB	85
	DB	73
	DB	79
	DB	80
	DB	123
	DB	125
	DB	10
	DB	0
	DB	65
	DB	83
	DB	68
	DB	70
	DB	71
	DB	72
	DB	74
	DB	75
	DB	76
	DB	58
	DB	0
	DB	126
	DB	0
	DB	0
	DB	90
	DB	88
	DB	67
	DB	86
	DB	66
	DB	78
	DB	77
	DB	60
	DB	62
	DB	63
	DB	0
	DB	0
	DB	0
	DB	32
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
LC0:
	DB	"console",0x00
LC3:
	DB	"[lcr %4d %4d]",0x00
LC4:
	DB	"(%3d, %3d)",0x00
LC1:
	DB	"%02X",0x00
LC2:
	DB	"               ",0x00
[SECTION .text]
	GLOBAL	_HariMain
_HariMain:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	XOR	EDI,EDI
	PUSH	EBX
	LEA	EBX,DWORD [-44+EBP]
	SUB	ESP,1156
	MOV	DWORD [-1112+EBP],-1
	MOV	DWORD [-1116+EBP],-1
	MOV	DWORD [-1120+EBP],0
	MOV	DWORD [-1140+EBP],0
	MOV	DWORD [-1152+EBP],0
	MOV	AL,BYTE [4081]
	PUSH	0
	SAR	AL,4
	MOV	EDX,EAX
	LEA	EAX,DWORD [-764+EBP]
	PUSH	EAX
	AND	EDX,7
	PUSH	32
	LEA	EAX,DWORD [-76+EBP]
	PUSH	EAX
	MOV	DWORD [-1156+EBP],EDX
	MOV	DWORD [-1160+EBP],-1
	MOV	DWORD [-1164+EBP],0
	MOV	DWORD [-1168+EBP],0
	CALL	_fifo32_init
	CALL	_init_gdtidt
	CALL	_init_pic
	CALL	_io_sti
	LEA	EAX,DWORD [-636+EBP]
	PUSH	0
	PUSH	EAX
	PUSH	128
	PUSH	EBX
	CALL	_fifo32_init
	ADD	ESP,32
	CALL	_init_pit
	PUSH	256
	PUSH	EBX
	CALL	_init_keyboard
	LEA	EAX,DWORD [-780+EBP]
	PUSH	EAX
	PUSH	512
	PUSH	EBX
	CALL	_enable_mouse
	PUSH	248
	PUSH	33
	CALL	_io_out8
	PUSH	239
	PUSH	161
	CALL	_io_out8
	ADD	ESP,36
	PUSH	-1073741825
	PUSH	4194304
	CALL	_memtest
	PUSH	3932160
	MOV	DWORD [-1124+EBP],EAX
	CALL	_memman_init
	PUSH	647168
	PUSH	4096
	PUSH	3932160
	CALL	_memman_free
	MOV	EAX,DWORD [-1124+EBP]
	SUB	EAX,4194304
	PUSH	EAX
	PUSH	4194304
	PUSH	3932160
	CALL	_memman_free
	ADD	ESP,36
	CALL	_init_palette
	MOVSX	EAX,WORD [4086]
	PUSH	EAX
	MOVSX	EAX,WORD [4084]
	PUSH	EAX
	PUSH	DWORD [4088]
	PUSH	3932160
	CALL	_shtctl_init
	MOV	DWORD [4068],EAX
	PUSH	3932160
	MOV	DWORD [-1096+EBP],EAX
	CALL	_task_init
	PUSH	2
	PUSH	1
	MOV	DWORD [-1148+EBP],EAX
	PUSH	EAX
	MOV	DWORD [-20+EBP],EAX
	CALL	_task_run
	ADD	ESP,32
	PUSH	DWORD [-1096+EBP]
	CALL	_sheet_alloc
	MOVSX	EDX,WORD [4086]
	MOV	DWORD [-1132+EBP],EAX
	MOVSX	EAX,WORD [4084]
	IMUL	EAX,EDX
	PUSH	EAX
	PUSH	3932160
	CALL	_memman_alloc_4k
	PUSH	-1
	MOV	DWORD [-1128+EBP],EAX
	MOVSX	EAX,WORD [4086]
	PUSH	EAX
	MOVSX	EAX,WORD [4084]
	PUSH	EAX
	PUSH	DWORD [-1128+EBP]
	PUSH	DWORD [-1132+EBP]
	CALL	_sheet_setbuf
	ADD	ESP,32
	PUSH	178
	MOVSX	EAX,WORD [4086]
	PUSH	EAX
	MOVSX	EAX,WORD [4084]
	PUSH	EAX
	PUSH	DWORD [-1128+EBP]
	CALL	_init_screen8
	MOV	ECX,DWORD [-1132+EBP]
	MOV	DWORD [-1144+EBP],ECX
	CALL	_task_alloc
	PUSH	65536
	MOV	EBX,EAX
	PUSH	3932160
	CALL	_memman_alloc_4k
	MOV	EDX,DWORD [-1144+EBP]
	ADD	EAX,65528
	MOV	DWORD [100+EBX],EAX
	MOV	DWORD [76+EBX],_time_task
	MOV	DWORD [116+EBX],8
	MOV	DWORD [120+EBX],16
	MOV	DWORD [124+EBX],8
	MOV	DWORD [128+EBX],8
	MOV	DWORD [132+EBX],8
	MOV	DWORD [136+EBX],8
	MOV	DWORD [4+EAX],EDX
	PUSH	2
	PUSH	1
	PUSH	EBX
	CALL	_task_run
	ADD	ESP,36
	MOV	ECX,DWORD [-1096+EBP]
	MOV	EAX,DWORD [-1144+EBP]
	MOV	DWORD [-1108+EBP],1
	MOV	DWORD [12308+ECX],EAX
L6:
	PUSH	DWORD [-1096+EBP]
	LEA	ESI,DWORD [-1076+EBP]
	CALL	_sheet_alloc
	LEA	EBX,DWORD [-1084+EBP]
	MOV	DWORD [ESI+EDI*1],EAX
	PUSH	250000
	PUSH	3932160
	CALL	_memman_alloc_4k
	MOV	DWORD [EBX+EDI*1],EAX
	PUSH	-1
	PUSH	500
	PUSH	500
	PUSH	EAX
	PUSH	DWORD [ESI+EDI*1]
	CALL	_sheet_setbuf
	ADD	ESP,32
	PUSH	0
	PUSH	LC0
	PUSH	500
	PUSH	500
	PUSH	DWORD [EBX+EDI*1]
	CALL	_make_window8
	PUSH	0
	PUSH	463
	PUSH	484
	PUSH	28
	PUSH	8
	PUSH	DWORD [ESI+EDI*1]
	CALL	_make_textbox8
	ADD	ESP,44
	CALL	_task_alloc
	PUSH	71680
	MOV	EBX,EAX
	PUSH	3932160
	MOV	DWORD [-1092+EBP+EDI*1],EAX
	CALL	_memman_alloc_4k
	MOV	EDX,DWORD [ESI+EDI*1]
	ADD	EAX,71668
	MOV	DWORD [100+EBX],EAX
	MOV	EAX,DWORD [-1092+EBP+EDI*1]
	MOV	ECX,DWORD [100+EAX]
	MOV	DWORD [76+EAX],_console_task
	MOV	DWORD [116+EAX],8
	MOV	DWORD [120+EAX],16
	MOV	DWORD [124+EAX],8
	MOV	DWORD [128+EAX],8
	MOV	DWORD [132+EAX],8
	MOV	DWORD [136+EAX],8
	MOV	DWORD [4+ECX],EDX
	MOV	ECX,DWORD [-1124+EBP]
	MOV	EDX,DWORD [100+EAX]
	MOV	DWORD [8+EDX],ECX
	PUSH	2
	PUSH	1
	PUSH	EAX
	CALL	_task_run
	ADD	ESP,20
	MOV	EAX,DWORD [ESI+EDI*1]
	MOV	EDX,DWORD [-1092+EBP+EDI*1]
	ADD	EDI,4
	OR	DWORD [28+EAX],32
	DEC	DWORD [-1108+EBP]
	MOV	DWORD [36+EAX],EDX
	MOV	DWORD [40+EAX],LC0
	JNS	L6
	PUSH	DWORD [-1096+EBP]
	MOV	DWORD [-1108+EBP],2
	LEA	EBX,DWORD [-1036+EBP]
	CALL	_sheet_alloc
	PUSH	99
	LEA	ESI,DWORD [-1088+EBP]
	PUSH	16
	MOV	DWORD [-1136+EBP],EAX
	PUSH	16
	PUSH	EBX
	PUSH	EAX
	CALL	_sheet_setbuf
	PUSH	99
	PUSH	EBX
	LEA	EBX,DWORD [-76+EBP]
	CALL	_init_mouse_cursor8
	ADD	ESP,32
	MOVSX	EAX,WORD [4084]
	LEA	EDX,DWORD [-16+EAX]
	MOV	EAX,EDX
	CDQ
	IDIV	DWORD [-1108+EBP]
	MOV	DWORD [-1100+EBP],EAX
	MOVSX	EAX,WORD [4086]
	PUSH	0
	LEA	EDX,DWORD [-44+EAX]
	PUSH	0
	MOV	EAX,EDX
	CDQ
	IDIV	DWORD [-1108+EBP]
	PUSH	DWORD [-1132+EBP]
	MOV	DWORD [-1104+EBP],EAX
	CALL	_sheet_slide
	PUSH	2
	PUSH	8
	PUSH	DWORD [-1076+EBP]
	CALL	_sheet_slide
	PUSH	6
	PUSH	56
	PUSH	DWORD [-1072+EBP]
	CALL	_sheet_slide
	ADD	ESP,36
	PUSH	DWORD [-1104+EBP]
	PUSH	DWORD [-1100+EBP]
	PUSH	DWORD [-1136+EBP]
	CALL	_sheet_slide
	PUSH	0
	PUSH	DWORD [-1132+EBP]
	CALL	_sheet_updown
	PUSH	1
	PUSH	DWORD [-1072+EBP]
	CALL	_sheet_updown
	PUSH	2
	PUSH	DWORD [-1076+EBP]
	CALL	_sheet_updown
	ADD	ESP,36
	PUSH	3
	PUSH	DWORD [-1136+EBP]
	CALL	_sheet_updown
	MOV	EDX,DWORD [-1076+EBP]
	PUSH	EDX
	MOV	DWORD [-1144+EBP],EDX
	CALL	_keywin_on
	PUSH	237
	PUSH	EBX
	CALL	_fifo32_put
	PUSH	DWORD [-1156+EBP]
	PUSH	EBX
	LEA	EBX,DWORD [-1092+EBP]
	CALL	_fifo32_put
	ADD	ESP,28
L11:
	PUSH	2
	PUSH	2
	PUSH	DWORD [EBX]
	ADD	EBX,4
	CALL	_task_run
	ADD	ESP,12
	CMP	EBX,ESI
	JLE	L11
L12:
	LEA	EBX,DWORD [-76+EBP]
	PUSH	EBX
	CALL	_fifo32_status
	POP	ECX
	TEST	EAX,EAX
	JLE	L15
	CMP	DWORD [-1160+EBP],0
	JS	L111
L15:
	LEA	EBX,DWORD [-44+EBP]
	CALL	_io_cli
	PUSH	EBX
	CALL	_fifo32_status
	POP	EDX
	TEST	EAX,EAX
	JE	L112
	PUSH	EBX
	CALL	_fifo32_get
	MOV	DWORD [-1108+EBP],EAX
	CALL	_io_sti
	MOV	ECX,DWORD [-1144+EBP]
	POP	EAX
	CMP	DWORD [28+ECX],0
	JNE	L18
	MOV	EDX,DWORD [-1096+EBP]
	MOV	EAX,DWORD [16+EDX]
	MOV	EAX,DWORD [16+EDX+EAX*4]
	PUSH	EAX
	MOV	DWORD [-1144+EBP],EAX
	CALL	_keywin_on
	POP	EAX
L18:
	MOV	EAX,DWORD [-1108+EBP]
	SUB	EAX,256
	CMP	EAX,255
	JBE	L113
	MOV	EAX,DWORD [-1108+EBP]
	SUB	EAX,512
	CMP	EAX,255
	JA	L12
	MOVZX	EAX,BYTE [-1108+EBP]
	PUSH	EAX
	LEA	EAX,DWORD [-780+EBP]
	PUSH	EAX
	CALL	_mouse_decode
	POP	EDX
	POP	ECX
	TEST	EAX,EAX
	JE	L12
	MOV	EDX,DWORD [-776+EBP]
	MOV	EAX,DWORD [-772+EBP]
	ADD	DWORD [-1100+EBP],EDX
	ADD	DWORD [-1104+EBP],EAX
	CMP	DWORD [-1120+EBP],0
	JE	L65
	PUSH	EAX
	LEA	EBX,DWORD [-124+EBP]
	PUSH	EDX
	PUSH	LC3
	PUSH	EBX
	CALL	_sprintf
	ADD	ESP,16
	MOV	EAX,DWORD [-768+EBP]
	TEST	EAX,1
	JE	L66
	MOV	BYTE [-123+EBP],76
L66:
	TEST	EAX,2
	JE	L67
	MOV	BYTE [-121+EBP],82
L67:
	AND	EAX,4
	JE	L68
	MOV	BYTE [-122+EBP],67
L68:
	PUSH	15
	PUSH	EBX
	PUSH	DWORD [-1128+EBP]
	CALL	_get_bc
	MOV	DWORD [ESP],EAX
	PUSH	7
	PUSH	16
	PUSH	32
	PUSH	DWORD [-1132+EBP]
	CALL	_putfonts8_asc_sht
	ADD	ESP,28
L65:
	CMP	DWORD [-1100+EBP],0
	JS	L114
L69:
	CMP	DWORD [-1104+EBP],0
	JS	L115
L70:
	MOVSX	EAX,WORD [4084]
	DEC	EAX
	CMP	DWORD [-1100+EBP],EAX
	JLE	L71
	MOV	DWORD [-1100+EBP],EAX
L71:
	MOVSX	EAX,WORD [4086]
	DEC	EAX
	CMP	DWORD [-1104+EBP],EAX
	JLE	L72
	MOV	DWORD [-1104+EBP],EAX
L72:
	CMP	DWORD [-1120+EBP],0
	JE	L73
	PUSH	DWORD [-1104+EBP]
	PUSH	DWORD [-1100+EBP]
	PUSH	LC4
	LEA	EBX,DWORD [-124+EBP]
	PUSH	EBX
	CALL	_sprintf
	PUSH	10
	PUSH	EBX
	PUSH	DWORD [-1128+EBP]
	CALL	_get_bc
	MOV	DWORD [ESP],EAX
	PUSH	7
	PUSH	0
	PUSH	0
	PUSH	DWORD [-1132+EBP]
	CALL	_putfonts8_asc_sht
	ADD	ESP,44
L73:
	CMP	DWORD [-1100+EBP],0
	JS	L116
L74:
	CMP	DWORD [-1104+EBP],0
	JS	L117
L75:
	MOVSX	EAX,WORD [4084]
	DEC	EAX
	CMP	DWORD [-1100+EBP],EAX
	JLE	L76
	MOV	DWORD [-1100+EBP],EAX
L76:
	MOVSX	EAX,WORD [4086]
	DEC	EAX
	CMP	DWORD [-1104+EBP],EAX
	JLE	L77
	MOV	DWORD [-1104+EBP],EAX
L77:
	PUSH	DWORD [-1104+EBP]
	PUSH	DWORD [-1100+EBP]
	PUSH	DWORD [-1136+EBP]
	CALL	_sheet_slide
	ADD	ESP,12
	TEST	DWORD [-768+EBP],1
	JNE	L118
	MOV	DWORD [-1112+EBP],-1
	JMP	L12
L118:
	CMP	DWORD [-1112+EBP],0
	JS	L119
	MOV	ESI,DWORD [-1104+EBP]
	MOV	EAX,DWORD [-1140+EBP]
	SUB	ESI,DWORD [-1116+EBP]
	MOV	EDI,DWORD [-1100+EBP]
	SUB	EDI,DWORD [-1112+EBP]
	ADD	ESI,DWORD [16+EAX]
	PUSH	ESI
	ADD	EDI,DWORD [12+EAX]
	PUSH	EDI
	PUSH	EAX
	CALL	_sheet_slide
	ADD	ESP,12
	MOV	EDX,DWORD [-1100+EBP]
	MOV	ECX,DWORD [-1104+EBP]
	MOV	DWORD [-1112+EBP],EDX
	MOV	DWORD [-1116+EBP],ECX
L98:
	MOV	EAX,DWORD [-1144+EBP]
	TEST	BYTE [28+EAX],16
	JE	L12
	PUSH	13
	MOV	EAX,DWORD [36+EAX]
	ADD	EAX,16
	PUSH	EAX
	CALL	_fifo32_put
	MOV	ECX,DWORD [-1144+EBP]
	MOV	EAX,DWORD [-1100+EBP]
	ADD	EAX,512
	PUSH	EAX
	MOV	EAX,DWORD [36+ECX]
	ADD	EAX,16
	PUSH	EAX
	CALL	_fifo32_put
	MOV	EDX,DWORD [-1144+EBP]
	PUSH	14
	MOV	EAX,DWORD [36+EDX]
	ADD	EAX,16
	PUSH	EAX
	CALL	_fifo32_put
	MOV	ECX,DWORD [-1144+EBP]
	MOV	EAX,DWORD [-1104+EBP]
	ADD	EAX,512
	PUSH	EAX
	MOV	EAX,DWORD [36+ECX]
	ADD	EAX,16
	PUSH	EAX
	CALL	_fifo32_put
	ADD	ESP,32
	JMP	L12
L119:
	MOV	ECX,DWORD [-1096+EBP]
	MOV	EAX,DWORD [16+ECX]
	MOV	EBX,EAX
	DEC	EBX
	JS	L98
L97:
	MOV	EDX,DWORD [-1096+EBP]
	MOV	ESI,DWORD [-1104+EBP]
	MOV	EDI,DWORD [-1100+EBP]
	MOV	EDX,DWORD [20+EDX+EBX*4]
	MOV	DWORD [-1140+EBP],EDX
	SUB	ESI,DWORD [16+EDX]
	SUB	EDI,DWORD [12+EDX]
	JS	L82
	CMP	EDI,DWORD [4+EDX]
	JGE	L82
	TEST	ESI,ESI
	JS	L82
	CMP	ESI,DWORD [8+EDX]
	JGE	L82
	TEST	EBX,EBX
	JG	L120
L82:
	DEC	EBX
	JNS	L97
	JMP	L98
L120:
	MOV	ECX,DWORD [-1144+EBP]
	CMP	EDX,ECX
	JE	L85
	DEC	EAX
	PUSH	EAX
	PUSH	EDX
	CALL	_sheet_updown
	PUSH	DWORD [-1144+EBP]
	CALL	_keywin_off
	MOV	EAX,DWORD [-1140+EBP]
	PUSH	EAX
	MOV	DWORD [-1144+EBP],EAX
	CALL	_keywin_on
	ADD	ESP,16
L85:
	CMP	ESI,19
	JG	L98
	MOV	EAX,DWORD [-1140+EBP]
	MOV	EDX,DWORD [-1100+EBP]
	MOV	DWORD [-1112+EBP],EDX
	MOV	ECX,DWORD [-1104+EBP]
	MOV	EDX,DWORD [4+EAX]
	MOV	DWORD [-1116+EBP],ECX
	LEA	EAX,DWORD [-21+EDX]
	CMP	EAX,EDI
	JG	L87
	LEA	EAX,DWORD [-5+EDX]
	CMP	EDI,EAX
	JG	L87
	CMP	ESI,4
	JLE	L87
	CMP	ESI,19
	JG	L87
	MOV	EDX,DWORD [-1140+EBP]
	TEST	BYTE [28+EDX],16
	JE	L87
	MOV	EBX,DWORD [36+EDX]
	CALL	_io_cli
	LEA	EAX,DWORD [48+EBX]
	MOV	DWORD [84+EBX],EAX
	MOV	DWORD [76+EBX],_end_app
	CALL	_io_sti
L87:
	MOV	ECX,DWORD [-1140+EBP]
	MOV	EDX,DWORD [4+ECX]
	LEA	EAX,DWORD [-38+EDX]
	CMP	EAX,EDI
	JG	L98
	LEA	EAX,DWORD [-24+EDX]
	CMP	EDI,EAX
	JG	L98
	CMP	ESI,4
	JLE	L98
	CMP	ESI,19
	JG	L98
	CMP	DWORD [-1164+EBP],4
	JG	L98
	MOV	EBX,1
L96:
	CMP	DWORD [-1068+EBP+EBX*4],0
	JE	L108
	INC	EBX
	CMP	EBX,5
	JLE	L96
	JMP	L98
L108:
	MOV	EAX,DWORD [-1140+EBP]
	PUSH	15
	MOV	EDX,DWORD [-1132+EBP]
	PUSH	DWORD [40+EAX]
	PUSH	15
	PUSH	0
	MOV	EAX,DWORD [8+EDX]
	SUB	EAX,20
	PUSH	EAX
	MOV	EAX,EBX
	IMUL	EAX,EAX,130
	PUSH	EAX
	PUSH	EDX
	CALL	_putfonts8_asc_sht
	PUSH	-1
	MOV	ECX,DWORD [-1140+EBP]
	INC	DWORD [-1164+EBP]
	PUSH	ECX
	MOV	DWORD [-1068+EBP+EBX*4],ECX
	CALL	_sheet_updown
	ADD	ESP,36
	JMP	L98
L117:
	MOV	DWORD [-1104+EBP],0
	JMP	L75
L116:
	MOV	DWORD [-1100+EBP],0
	JMP	L74
L115:
	MOV	DWORD [-1104+EBP],0
	JMP	L70
L114:
	MOV	DWORD [-1100+EBP],0
	JMP	L69
L113:
	CMP	DWORD [-1120+EBP],0
	JE	L20
	PUSH	EAX
	LEA	EBX,DWORD [-124+EBP]
	PUSH	LC1
	PUSH	EBX
	CALL	_sprintf
	PUSH	2
	PUSH	EBX
	PUSH	DWORD [-1128+EBP]
	CALL	_get_bc
	MOV	DWORD [ESP],EAX
	PUSH	7
	PUSH	16
	PUSH	0
	PUSH	DWORD [-1132+EBP]
	CALL	_putfonts8_asc_sht
	ADD	ESP,40
L20:
	CMP	DWORD [-1108+EBP],339
	JG	L21
	CMP	DWORD [-1152+EBP],0
	JNE	L22
	MOV	ECX,DWORD [-1108+EBP]
	MOV	AL,BYTE [_keytable.0-256+ECX]
L109:
	MOV	BYTE [-124+EBP],AL
L24:
	MOV	DL,BYTE [-124+EBP]
	LEA	EAX,DWORD [-65+EDX]
	CMP	AL,25
	JA	L25
	TEST	DWORD [-1156+EBP],4
	JNE	L26
	CMP	DWORD [-1152+EBP],0
	JE	L110
L26:
	TEST	DWORD [-1156+EBP],4
	JE	L25
	CMP	DWORD [-1152+EBP],0
	JE	L25
L110:
	LEA	EAX,DWORD [32+EDX]
	MOV	BYTE [-124+EBP],AL
L25:
	MOV	AL,BYTE [-124+EBP]
	TEST	AL,AL
	JE	L29
	MOVSX	EAX,AL
	ADD	EAX,256
	MOV	ECX,DWORD [-1144+EBP]
	PUSH	EAX
	MOV	EAX,DWORD [36+ECX]
	ADD	EAX,16
	PUSH	EAX
	CALL	_fifo32_put
	POP	ESI
	POP	EDI
L29:
	CMP	DWORD [-1108+EBP],328
	JE	L121
L30:
	CMP	DWORD [-1108+EBP],336
	JE	L122
L31:
	CMP	DWORD [-1108+EBP],331
	JE	L123
L32:
	CMP	DWORD [-1108+EBP],333
	JE	L124
L33:
	CMP	DWORD [-1108+EBP],257
	JE	L125
L34:
	CMP	DWORD [-1108+EBP],271
	JE	L126
L35:
	CMP	DWORD [-1108+EBP],298
	JE	L127
L37:
	CMP	DWORD [-1108+EBP],310
	JE	L128
L38:
	CMP	DWORD [-1108+EBP],426
	JE	L129
L39:
	CMP	DWORD [-1108+EBP],438
	JE	L130
L40:
	CMP	DWORD [-1108+EBP],285
	JE	L131
L41:
	CMP	DWORD [-1108+EBP],413
	JE	L132
L42:
	CMP	DWORD [-1108+EBP],314
	JE	L133
L43:
	CMP	DWORD [-1108+EBP],325
	JE	L134
L44:
	CMP	DWORD [-1108+EBP],326
	JE	L135
L45:
	CMP	DWORD [-1108+EBP],506
	JE	L136
L46:
	CMP	DWORD [-1108+EBP],510
	JE	L137
L47:
	CMP	DWORD [-1108+EBP],257
	JE	L138
L48:
	CMP	DWORD [-1108+EBP],343
	JE	L139
L50:
	CMP	DWORD [-1108+EBP],315
	JE	L140
L51:
	XOR	EBX,EBX
	XOR	ESI,ESI
L61:
	LEA	EAX,DWORD [257+EBX]
	CMP	DWORD [-1108+EBP],EAX
	JE	L141
L57:
	INC	EBX
	ADD	ESI,130
	CMP	EBX,5
	JLE	L61
	JMP	L12
L141:
	CMP	DWORD [-1168+EBP],0
	JE	L57
	MOV	EDX,DWORD [-1068+EBP+EBX*4]
	TEST	EDX,EDX
	JE	L57
	MOV	ECX,DWORD [-1096+EBP]
	MOV	EAX,DWORD [16+ECX]
	DEC	EAX
	PUSH	EAX
	PUSH	EDX
	CALL	_sheet_updown
	MOV	EDX,DWORD [-1132+EBP]
	PUSH	15
	DEC	DWORD [-1164+EBP]
	PUSH	LC2
	PUSH	8
	PUSH	0
	MOV	EAX,DWORD [8+EDX]
	SUB	EAX,20
	PUSH	EAX
	PUSH	ESI
	PUSH	EDX
	MOV	DWORD [-1068+EBP+EBX*4],0
	CALL	_putfonts8_asc_sht
	ADD	ESP,36
	JMP	L57
L140:
	CMP	DWORD [-1152+EBP],0
	JE	L51
	CMP	DWORD [-1120+EBP],0
	JNE	L107
	MOV	DWORD [-1120+EBP],1
	JMP	L51
L107:
	PUSH	60
	PUSH	150
	PUSH	0
	PUSH	0
	PUSH	DWORD [-1128+EBP]
	CALL	_get_bc
	MOVZX	EAX,AL
	MOV	DWORD [ESP],EAX
	MOV	EAX,DWORD [-1132+EBP]
	PUSH	DWORD [4+EAX]
	PUSH	DWORD [-1128+EBP]
	CALL	_boxfill8
	PUSH	60
	PUSH	150
	PUSH	0
	PUSH	0
	PUSH	DWORD [-1132+EBP]
	CALL	_sheet_refresh
	ADD	ESP,48
	MOV	DWORD [-1120+EBP],0
	JMP	L51
L139:
	MOV	EDX,DWORD [-1096+EBP]
	MOV	EAX,DWORD [16+EDX]
	DEC	EAX
	PUSH	EAX
	PUSH	DWORD [24+EDX]
	CALL	_sheet_updown
	PUSH	DWORD [-1144+EBP]
	CALL	_keywin_off
	MOV	ECX,DWORD [-1096+EBP]
	MOV	EAX,DWORD [16+ECX]
	MOV	EAX,DWORD [16+ECX+EAX*4]
	PUSH	EAX
	MOV	DWORD [-1144+EBP],EAX
	CALL	_keywin_on
	ADD	ESP,16
	JMP	L50
L138:
	CMP	DWORD [-1152+EBP],0
	JE	L48
	MOV	ECX,DWORD [-1144+EBP]
	MOV	EBX,DWORD [36+ECX]
	TEST	EBX,EBX
	JE	L48
	CMP	DWORD [52+EBX],0
	JE	L48
	CALL	_io_cli
	LEA	EAX,DWORD [48+EBX]
	MOV	DWORD [84+EBX],EAX
	MOV	DWORD [76+EBX],_end_app
	CALL	_io_sti
	JMP	L48
L137:
	CALL	_wait_KBC_sendready
	PUSH	DWORD [-1160+EBP]
	PUSH	96
	CALL	_io_out8
	POP	EBX
	POP	ESI
	JMP	L47
L136:
	MOV	DWORD [-1160+EBP],-1
	JMP	L46
L135:
	PUSH	237
	LEA	EBX,DWORD [-76+EBP]
	PUSH	EBX
	XOR	DWORD [-1156+EBP],1
	CALL	_fifo32_put
	PUSH	DWORD [-1156+EBP]
	PUSH	EBX
	CALL	_fifo32_put
	ADD	ESP,16
	JMP	L45
L134:
	PUSH	237
	LEA	EBX,DWORD [-76+EBP]
	PUSH	EBX
	XOR	DWORD [-1156+EBP],2
	CALL	_fifo32_put
	PUSH	DWORD [-1156+EBP]
	PUSH	EBX
	CALL	_fifo32_put
	ADD	ESP,16
	JMP	L44
L133:
	PUSH	237
	LEA	EBX,DWORD [-76+EBP]
	PUSH	EBX
	XOR	DWORD [-1156+EBP],4
	CALL	_fifo32_put
	PUSH	DWORD [-1156+EBP]
	PUSH	EBX
	CALL	_fifo32_put
	ADD	ESP,16
	JMP	L43
L132:
	MOV	DWORD [-1168+EBP],0
	JMP	L42
L131:
	MOV	DWORD [-1168+EBP],1
	JMP	L41
L130:
	AND	DWORD [-1152+EBP],-3
	JMP	L40
L129:
	AND	DWORD [-1152+EBP],-2
	JMP	L39
L128:
	OR	DWORD [-1152+EBP],2
	JMP	L38
L127:
	OR	DWORD [-1152+EBP],1
	JMP	L37
L126:
	PUSH	DWORD [-1144+EBP]
	CALL	_keywin_off
	MOV	ECX,DWORD [-1144+EBP]
	POP	EAX
	MOV	EBX,DWORD [24+ECX]
	DEC	EBX
	JNE	L36
	MOV	EAX,DWORD [-1096+EBP]
	MOV	EBX,DWORD [16+EAX]
	DEC	EBX
L36:
	MOV	EDX,DWORD [-1096+EBP]
	MOV	EBX,DWORD [20+EDX+EBX*4]
	PUSH	EBX
	MOV	DWORD [-1144+EBP],EBX
	CALL	_keywin_on
	POP	EDI
	JMP	L35
L125:
	MOV	EDX,DWORD [-1144+EBP]
	PUSH	507
	MOV	EAX,DWORD [36+EDX]
	ADD	EAX,16
	PUSH	EAX
	CALL	_fifo32_put
	POP	EAX
	POP	EDX
	JMP	L34
L124:
	MOV	ECX,DWORD [-1144+EBP]
	PUSH	508
	MOV	EAX,DWORD [36+ECX]
	ADD	EAX,16
	PUSH	EAX
	CALL	_fifo32_put
	POP	ECX
	POP	EBX
	JMP	L33
L123:
	MOV	EDX,DWORD [-1144+EBP]
	PUSH	509
	MOV	EAX,DWORD [36+EDX]
	ADD	EAX,16
	PUSH	EAX
	CALL	_fifo32_put
	POP	ESI
	POP	EDI
	JMP	L32
L122:
	MOV	ECX,DWORD [-1144+EBP]
	PUSH	510
	MOV	EAX,DWORD [36+ECX]
	ADD	EAX,16
	PUSH	EAX
	CALL	_fifo32_put
	POP	EAX
	POP	EDX
	JMP	L31
L121:
	MOV	EDX,DWORD [-1144+EBP]
	PUSH	511
	MOV	EAX,DWORD [36+EDX]
	ADD	EAX,16
	PUSH	EAX
	CALL	_fifo32_put
	POP	ECX
	POP	EBX
	JMP	L30
L22:
	MOV	EDX,DWORD [-1108+EBP]
	MOV	AL,BYTE [_keytable1.1-256+EDX]
	JMP	L109
L21:
	MOV	BYTE [-124+EBP],0
	JMP	L24
L112:
	PUSH	DWORD [-1148+EBP]
	CALL	_task_sleep
	CALL	_io_sti
	POP	EAX
	JMP	L12
L111:
	PUSH	EBX
	CALL	_fifo32_get
	MOV	DWORD [-1160+EBP],EAX
	CALL	_wait_KBC_sendready
	PUSH	DWORD [-1160+EBP]
	PUSH	96
	CALL	_io_out8
	ADD	ESP,12
	JMP	L15
	GLOBAL	_keywin_on
_keywin_on:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EBX
	PUSH	1
	MOV	EBX,DWORD [8+EBP]
	PUSH	EBX
	CALL	_change_wtitle8
	TEST	BYTE [28+EBX],32
	POP	EAX
	POP	EDX
	JNE	L144
L142:
	MOV	EBX,DWORD [-4+EBP]
	LEAVE
	RET
L144:
	PUSH	2
	MOV	EAX,DWORD [36+EBX]
	ADD	EAX,16
	PUSH	EAX
	CALL	_fifo32_put
	POP	EBX
	POP	EAX
	JMP	L142
	GLOBAL	_keywin_off
_keywin_off:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EBX
	PUSH	0
	MOV	EBX,DWORD [8+EBP]
	PUSH	EBX
	CALL	_change_wtitle8
	TEST	BYTE [28+EBX],32
	POP	EAX
	POP	EDX
	JNE	L147
L145:
	MOV	EBX,DWORD [-4+EBP]
	LEAVE
	RET
L147:
	PUSH	3
	MOV	EAX,DWORD [36+EBX]
	ADD	EAX,16
	PUSH	EAX
	CALL	_fifo32_put
	POP	ECX
	POP	EBX
	JMP	L145
